## Autogenerated by Scribe. DO NOT MODIFY.

name: Admin
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/admin/books/{book_id}/bookCopies'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'All book copies'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      book_id:
        name: book_id
        description: 'The ID of the book.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      book_id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 61
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 37
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: velit
      per_page: 61
      page: 37
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          [
              {
                  "id": "uuid",
                  "title": "Title",
                  "visible": true,
                  "branch_id": "Branch ID",
                  "status": "available",
                  "confition": "good",
                  "created_at": "date",
                  "updated_at": "date"
              }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vaZ5DEVacfeg8b36d1P64hk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/books/{book_id}/bookCopies'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Store new book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      book_id:
        name: book_id
        description: 'The ID of the book.'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      book_id: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: string
        required: false
        example: excepturi
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      visible:
        name: visible
        description: boolean
        required: false
        example: pariatur
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: uuid
        required: false
        example: labore
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'string values: available,under_repair,lost'
        required: false
        example: deleniti
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      condition:
        name: condition
        description: 'string values: good,worn,damaged'
        required: false
        example: consequuntur
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: excepturi
      visible: pariatur
      branch_id: labore
      status: deleniti
      condition: consequuntur
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "visible": true,
              "branch_id": "Branch ID",
              "status": "available",
              "confition": "good",
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P6ca6D3Vfbvd1aeZEg5h4k8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/bookCopies/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Show book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookCopy.'
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: perferendis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "visible": true,
              "branch_id": "Branch ID",
              "status": "available",
              "confition": "good",
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g584vba66d3eDZhVPc1aEkf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/bookCopies/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Update book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookCopy.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      visible:
        name: visible
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'values: available,under_repair - Only when the copy is not reserved'
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      condition:
        name: condition
        description: 'values: good,worn,damaged - Only when the copy is not reserved'
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: '- Only when the copy is not reserved'
        required: false
        example: quod
        type: uuid
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: officia
      visible: false
      status: dolorem
      condition: aut
      branch_id: quod
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VhdeZ6Ebf5463g1kacaDv8P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/bookCopies/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Destroy book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookCopy.'
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bcva4PZEahk66D51eg8f3dV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/books
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: 'All books'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: ''
        required: false
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: in
      page: 15
      per_page: 7
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 28
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 61
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: et
      per_page: 28
      page: 61
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": "uuid",
                      "title": "Title",
                      "description": null,
                      "visible": true,
                      "available": true,
                      "created_at": "date"
                  }
              ],
              "meta": {
                  "current_page": 1,
                  "last_page": 1,
                  "per_page": 10,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fcD3d56aZEb18hkgeavV4P6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/books
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Store
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: string
        required: false
        example: voluptas
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Officia voluptate ipsam optio quis et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: boolean
        required: false
        example: velit
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: voluptas
      description: 'Officia voluptate ipsam optio quis et.'
      visible: velit
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "description": null,
              "visible": true,
              "available": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bafhav5Vc684gkZe16DP3dE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/books/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "description": null,
              "visible": true,
              "available": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8cfa1vEdDVb5ehgk463ZPa6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/books/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Update
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: optio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: optio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: excepturi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Id amet non velit odio eum.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: excepturi
      description: 'Id amet non velit odio eum.'
      visible: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VhEPDZa66gef4bvd8a15c3k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/books/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Destroy
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: doloremque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vfVd51aD8cb4akeEZghP636'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/branches
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: 'All branches'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: ''
        required: false
        example: laboriosam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: laboriosam
      page: 7
      per_page: 20
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 41
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: voluptas
      per_page: 41
      page: 9
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": "uuid",
                      "title": "Title",
                      "address": null,
                      "visible": true,
                      "created_at": "date"
                  }
              ],
              "meta": {
                  "current_page": 1,
                  "last_page": 1,
                  "per_page": 10,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3v8g6kd5c4ZEfD1VaehPab6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/branches
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Store
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: string
        required: false
        example: vel
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: boolean
        required: false
        example: deleniti
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vel
      address: quaerat
      visible: deleniti
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "address": null,
              "visible": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v8Z543DEb1eg6aka6VfdchP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/branches/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the branch.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "address": null,
              "visible": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pgfa38kb4a1dD5c6VZh6vEe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/branches/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Update
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the branch.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: tempore
      address: repellat
      visible: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eb6816ZDvkE4cdV3Paa5ghf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/branches/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Destroy
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the branch.'
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: suscipit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VehEgfbc1k4P6avD65a8Zd3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/reservations/{reservation_id}/complete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Reservation
      subgroupDescription: ''
      title: Complete
      description: 'Only when reservation status = active'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      reservation_id:
        name: reservation_id
        description: 'The ID of the reservation.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      reservation_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPghcZ6d645VDek81bavEf3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/reservations
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Reservation
      subgroupDescription: ''
      title: 'All reservations'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: ''
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 9
      per_page: 3
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 85
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 77
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: similique
      per_page: 85
      page: 77
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": "uuid",
                      "user": {
                          "id": "uuid",
                          "name": "User name"
                      },
                      "book": {
                          "id": "uuid",
                          "title": "Title"
                      },
                      "copy": {
                          "id": "uuid",
                          "title": "Title"
                      },
                      "branch": {
                          "id": "uuid",
                          "title": "Title",
                          "address": "Address"
                      },
                      "days_reserved": 5,
                      "status": "active",
                      "started_at": "date",
                      "finished_at": "date",
                      "expiration_date": "date",
                      "created_at": "date",
                      "updated_at": "date"
                  }
              ],
              "meta": {
                  "current_page": 1,
                  "last_page": 1,
                  "per_page": 10,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 68cva3kPgfZ4VaEhD6e1d5b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/reservations/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Reservation
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the reservation.'
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: nam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "user": {
                  "id": "uuid",
                  "name": "User name"
              },
              "book": {
                  "id": "uuid",
                  "title": "Title"
              },
              "copy": {
                  "id": "uuid",
                  "title": "Title"
              },
              "branch": {
                  "id": "uuid",
                  "title": "Title",
                  "address": "Address"
              },
              "days_reserved": 5,
              "status": "active",
              "started_at": "date",
              "finished_at": "date",
              "expiration_date": "date",
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6ZPf64vVEcga13aD5hb8ed'
    controller: null
    method: null
    route: null
    custom: []
