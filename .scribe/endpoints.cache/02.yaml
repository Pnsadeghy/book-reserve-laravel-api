## Autogenerated by Scribe. DO NOT MODIFY.

name: Admin
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/admin/books/{book_id}/bookCopies'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'All book copies'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      book_id:
        name: book_id
        description: 'The ID of the book.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      book_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 40
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 68
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: porro
      per_page: 40
      page: 68
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          [
              {
                  "id": "uuid",
                  "title": "Title",
                  "visible": true,
                  "branch_id": "Branch ID",
                  "status": "available",
                  "condition": "good",
                  "special": true,
                  "created_at": "date",
                  "updated_at": "date"
              }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h8Pa6EZvkb56dc34aeDfVg1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/books/{book_id}/bookCopies'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Store new book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      book_id:
        name: book_id
        description: 'The ID of the book.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      book_id: quis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: string
        required: false
        example: molestias
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      visible:
        name: visible
        description: boolean
        required: false
        example: saepe
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      special:
        name: special
        description: boolean
        required: false
        example: voluptatum
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: uuid
        required: false
        example: enim
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'string values: available,under_repair,lost'
        required: false
        example: nemo
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      condition:
        name: condition
        description: 'string values: good,worn,damaged'
        required: false
        example: aperiam
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: molestias
      visible: saepe
      special: voluptatum
      branch_id: enim
      status: nemo
      condition: aperiam
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "visible": true,
              "branch_id": "Branch ID",
              "status": "available",
              "condition": "good",
              "special": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kaghe51av3DVPf6d6ZcE84b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/bookCopies/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Show book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookCopy.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "visible": true,
              "branch_id": "Branch ID",
              "status": "available",
              "condition": "good",
              "special": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8gdZ41cb5P6Vvae63DEhkfa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/bookCopies/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Update book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookCopy.'
        required: true
        example: ab
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ab
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      visible:
        name: visible
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      special:
        name: special
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'values: available,under_repair - Only when the copy is not reserved'
        required: false
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      condition:
        name: condition
        description: 'values: good,worn,damaged - Only when the copy is not reserved'
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: '- Only when the copy is not reserved'
        required: false
        example: in
        type: uuid
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: enim
      visible: false
      special: true
      status: iste
      condition: porro
      branch_id: in
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer geDdvahka365V64bPZ8cEf1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/bookCopies/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: 'Book copies'
      subgroupDescription: ''
      title: 'Destroy book copy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bookCopy.'
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: iste
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3d4aVhakeP656vbD1Zg8cfE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/books
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: 'All books'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: ''
        required: false
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: dolores
      page: 18
      per_page: 11
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: est
      per_page: 3
      page: 24
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": "uuid",
                      "title": "Title",
                      "description": null,
                      "visible": true,
                      "available": true,
                      "created_at": "date"
                  }
              ],
              "meta": {
                  "current_page": 1,
                  "last_page": 1,
                  "per_page": 10,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PEa3b5aD4kZv6Ve81gfchd6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/books
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Store
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: string
        required: false
        example: voluptas
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Vitae aut porro fuga nihil voluptas molestias quia ea.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: boolean
        required: false
        example: fugit
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: voluptas
      description: 'Vitae aut porro fuga nihil voluptas molestias quia ea.'
      visible: fugit
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "description": null,
              "visible": true,
              "available": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6fZe18EPv6khdba4DcV35ga'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/books/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: sequi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "description": null,
              "visible": true,
              "available": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Za1acED4db5fV68kvghe63P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/books/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Update
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Sed odio sed maxime vel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: est
      description: 'Sed odio sed maxime vel.'
      visible: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PkZ816ahg5Dv3fecdEa6V4b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/books/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Book
      subgroupDescription: ''
      title: Destroy
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h8aZd5aDkgev61f6Vb34EcP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/branches
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: 'All branches'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: ''
        required: false
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: odio
      page: 11
      per_page: 3
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: occaecati
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 48
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 43
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: occaecati
      per_page: 48
      page: 43
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": "uuid",
                      "title": "Title",
                      "address": null,
                      "visible": true,
                      "created_at": "date"
                  }
              ],
              "meta": {
                  "current_page": 1,
                  "last_page": 1,
                  "per_page": 10,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EavdhV8P6f5Zb3D1ke6cg4a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/branches
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Store
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: string
        required: false
        example: magnam
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: boolean
        required: false
        example: molestiae
        type: required
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: magnam
      address: nemo
      visible: molestiae
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "address": null,
              "visible": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bh1a6cefvdE6Z853k4DVgaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/branches/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the branch.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "title": "Title",
              "address": null,
              "visible": true,
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b4a683Vh1gv6PEZcekDa5fd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/branches/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Update
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the branch.'
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      visible:
        name: visible
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: qui
      address: eveniet
      visible: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 66eaDfab8vd4Z15ck3PVEgh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/branches/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Branch
      subgroupDescription: ''
      title: Destroy
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the branch.'
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a5EVcfebhg3816vZak46DPd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/reservations/{reservation_id}/complete'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Reservation
      subgroupDescription: ''
      title: Complete
      description: |-
        Confirm that the user returned the book

        Only when reservation status = active
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      reservation_id:
        name: reservation_id
        description: 'The ID of the reservation.'
        required: true
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      reservation_id: rem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dv6afkehE3bDc1VZag4P856'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/reservations
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Reservation
      subgroupDescription: ''
      title: 'All reservations'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 17
      per_page: 14
    bodyParameters:
      q:
        name: q
        description: ''
        required: false
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 53
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 42
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      q: nobis
      per_page: 53
      page: 42
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": [
                  {
                      "id": "uuid",
                      "user": {
                          "id": "uuid",
                          "name": "User name"
                      },
                      "book": {
                          "id": "uuid",
                          "title": "Title"
                      },
                      "copy": {
                          "id": "uuid",
                          "title": "Title"
                      },
                      "branch": {
                          "id": "uuid",
                          "title": "Title",
                          "address": "Address"
                      },
                      "days_reserved": 5,
                      "status": "active",
                      "started_at": "date",
                      "finished_at": "date",
                      "expiration_date": "date",
                      "created_at": "date",
                      "updated_at": "date"
                  }
              ],
              "meta": {
                  "current_page": 1,
                  "last_page": 1,
                  "per_page": 10,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 84VEgDhv5bdePak6af6Z1c3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/reservations/{id}'
    metadata:
      groupName: Admin
      groupDescription: ''
      subgroup: Reservation
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the reservation.'
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": "uuid",
              "user": {
                  "id": "uuid",
                  "name": "User name"
              },
              "book": {
                  "id": "uuid",
                  "title": "Title"
              },
              "copy": {
                  "id": "uuid",
                  "title": "Title"
              },
              "branch": {
                  "id": "uuid",
                  "title": "Title",
                  "address": "Address"
              },
              "days_reserved": 5,
              "status": "active",
              "started_at": "date",
              "finished_at": "date",
              "expiration_date": "date",
              "created_at": "date",
              "updated_at": "date"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer av5E8Pf6DZbceVh3d46gak1'
    controller: null
    method: null
    route: null
    custom: []
