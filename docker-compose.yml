version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: .deploy/Dockerfile.production
        environment:
            - APP_ENV=production
        volumes:
            - .:/var/www/html
        networks:
            - app_network
        depends_on:
            - redis
            - mysql

    nginx:
        image: nginx:latest
        volumes:
            - .:/var/www/html
            - ./.deploy/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "80:80"
        networks:
            - app_network
        depends_on:
            - app

    queue:
        build:
            context: .
            dockerfile: .deploy/Dockerfile.worker
        volumes:
            - .:/var/www/html
        command: php artisan queue:work --tries=3
        depends_on:
            - app
            - redis
            - mysql
        networks:
            - app_network
        healthcheck:
            test: ["CMD", "pgrep", "-f", "php artisan queue:work"]
            interval: 30s
            timeout: 10s
            retries: 3

    schedule:
        build:
            context: .
            dockerfile: .deploy/Dockerfile.worker
        volumes:
            - .:/var/www/html
        command: php artisan schedule:work
        depends_on:
            - app
            - mysql
        networks:
            - app_network
        healthcheck:
            test: [ "CMD", "pgrep", "-f", "php artisan schedule:work" ]
            interval: 30s
            timeout: 10s
            retries: 3

    redis:
        image: redis:latest
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        command: redis-server --requirepass ${REDIS_PASSWORD}
        networks:
            - app_network

    mysql:
        image: mysql:8.0
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    mysql_data:
